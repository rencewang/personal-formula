{"version":3,"sources":["webpack:///./src/components/projectside.js","webpack:///./src/components/projectpostmodule.js","webpack:///./src/templates/projectPost.js"],"names":["ProjectSide","className","Post","title","date","category","path","excerpt","tag","html","previousPost","nextPost","style","post","postheading","posttitle","replace","postdate","postcat","postcontent","dangerouslySetInnerHTML","__html","postnavigation","to","frontmatter","permalink","postQuery","ProjectPostTemplate","data","pageContext","markdownRemark","updated","autoExcerpt","id","next","previous","description","key"],"mappings":"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","file":"component---src-templates-project-post-js-b6c652fbd2e360d14b12.js","sourcesContent":["import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport \"../styles/projectblogside.scss\"\n\nconst ProjectSide = () => {\n\n    return (\n        <div className=\"projectsidenav\">\n            <h4>Project Name</h4>\n            <h4>Project Name</h4>\n            <h4>Project Name</h4>\n            <h4>Project Name</h4>\n        </div>\n    )\n}\n\nexport default ProjectSide","import React from 'react'\nimport { Link } from 'gatsby'\n// import Img from 'gatsby-image'\n\nimport style from '../styles/blogpost.module.scss'\n\nconst Post = ({\n    title,\n    date,\n    path,\n    excerpt,\n    tag,\n    category,\n    html,\n    previousPost,\n    nextPost,\n}) => {\n\n    if (previousPost==null) {\n        return (\n            <article className={style.post}>\n                <div className={style.postheading}>\n                    <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\n                    <div className={style.postdate}>{date}</div>\n                    <div className={style.postcat}>{category}</div>\n                </div>\n\n                <div className={style.postcontent}>\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className={style.postnavigation}>\n                    <div></div>\n                    <Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}  &raquo;</Link>\n                </div>\n            </article>\n        )\n    } else if (nextPost==null) {\n        return (\n            <article className={style.post}>\n                <div className={style.postheading}>\n                    <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\n                    <div className={style.postdate}>{date}</div>\n                    <div className={style.postcat}>{category}</div>\n                </div>\n\n                <div className={style.postcontent}>\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className={style.postnavigation}>\n                    <Link to={previousPost.frontmatter.permalink}>&laquo; {previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\n                    <div></div>\n                </div>\n            </article>\n        )\n    } else {\n        return (\n            <article className={style.post}>\n                <div className={style.postheading}>\n                    <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\n                    <div className={style.postdate}>{date}</div>\n                    <div className={style.postcat}>{category}</div>\n                </div>\n    \n                <div className={style.postcontent}>\n                    <div dangerouslySetInnerHTML={{ __html: html }} />\n                </div>\n                <div className={style.postnavigation}>\n                    <Link to={previousPost.frontmatter.permalink}>&laquo; {previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\n                    <Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}  &raquo;</Link>\n                </div>\n            </article>\n        )\n    }\n}\n\nexport default Post\n","import React from 'react'\n// import PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout/layout'\nimport ProjectSide from \"../components/projectside\"\nimport Post from \"../components/projectpostmodule\"\n\nimport \"../styles/projectbloggrid.scss\"\n\nconst ProjectPostTemplate = ({ data, pageContext }) => {\n    const {\n        frontmatter: { title, updated, permalink, tag, category },\n        excerpt: autoExcerpt,\n        id,\n        html,\n    } = data.markdownRemark\n    const { next, previous } = pageContext\n\n    return (\n        <Layout>\n          <SEO title={title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")} description={autoExcerpt} />\n\n            <div className=\"pbgrid\">\n                <div className=\"pbcontent\">\n                <Post\n                    key={id}\n                    title={title}\n                    date={updated}\n                    path={permalink}\n                    // coverImage={coverImage}\n                    html={html}\n                    tag={tag}\n                    category={category}\n                    previousPost={previous}\n                    nextPost={next}\n                />\n                </div>\n                <div className=\"pbnav\">\n                    <ProjectSide />\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default ProjectPostTemplate\n\nexport const postQuery = graphql `\n    query ProjectPostQuery ($path: String) {\n        markdownRemark(frontmatter: { permalink: { eq: $path } }) {\n            frontmatter {\n                title\n                updated(formatString: \"MMMM DD[,] YYYY\")\n                tag\n                category\n                permalink\n            }\n            id\n            html\n            excerpt\n        }\n    }\n`\n"],"sourceRoot":""}