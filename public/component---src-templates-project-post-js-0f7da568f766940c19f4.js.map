{"version":3,"sources":["webpack:///./src/styles/projectpost.module.scss","webpack:///./src/components/projectside.js","webpack:///./src/components/projectpostmodule.js","webpack:///./src/templates/projectPost.js"],"names":["module","exports","ProjectSide","timeframe","tools","previousPost","nextPost","data","className","allMarkdownRemark","edges","map","project","index","key","to","node","frontmatter","permalink","title","replace","Post","html","date","path","excerpt","style","projectheading","projecttitle","projectcontent","dangerouslySetInnerHTML","__html","postQuery","ProjectPostTemplate","pageContext","markdownRemark","updated","coverimage","autoExcerpt","id","next","previous","description","absolutePath"],"mappings":"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","file":"component---src-templates-project-post-js-0f7da568f766940c19f4.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overall\":\"projectpost-module--overall--3-Vcc\",\"container\":\"projectpost-module--container--3G-ZO\",\"content\":\"projectpost-module--content--22-py\",\"project\":\"projectpost-module--project--2Aj6U\",\"projectheading\":\"projectpost-module--projectheading--1mo-b\",\"projecttitle\":\"projectpost-module--projecttitle--2ux0i\",\"projectcontent\":\"projectpost-module--projectcontent--WPiUZ\"};","import React from \"react\"\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\n\nimport \"../styles/projectblogside.scss\"\n\nconst ProjectSide = ({ timeframe, tools, previousPost, nextPost}) => {\n\n    const data = useStaticQuery(graphql`\n    query ProjectNavigationQuery {\n        allMarkdownRemark (\n            filter: { frontmatter: { type: {eq: \"project\"}, published: {eq: true} } }\n            sort: { fields: [frontmatter___updated] order: DESC }\n        ) {\n            edges {\n                node {\n                    frontmatter {\n                        title\n                        permalink\n                    }\n                    id\n                }\n            }\n        }\n    }`)\n\n    if (previousPost==null) {\n        return (\n            <div className=\"projectside-post\">\n                <h2>Details</h2>\n                <div className=\"projectside-post-info\">\n                    <h5 className=\"time\">Timeframe:</h5> <h6 className=\"timeinput\">{timeframe}</h6>\n                    <h5 className=\"tools\">Tools:</h5> <h6 className=\"timeinput\">{tools}</h6>\n                </div>\n    \n                <div className=\"projectside-post-nav\">\n                    <h2>All Case Studies</h2>\n                    {data.allMarkdownRemark.edges.map((project, index) => (\n                        <h4 key={index}>\n                            <Link to={project.node.frontmatter.permalink}>{project.node.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\n                        </h4>\n                    ))}\n                </div>\n    \n                <div className=\"projectside-post-context\">\n                    <h2>Next</h2>\n                    <div><Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link></div>\n                </div>\n            </div>\n        )\n    } else if (nextPost==null) {\n        return (\n            <div className=\"projectside-post\">\n                <h2>Details</h2>\n                <div className=\"projectside-post-info\">\n                    <h5 className=\"time\">Timeframe:</h5> <h6 className=\"timeinput\">{timeframe}</h6>\n                    <h5 className=\"tools\">Tools:</h5> <h6 className=\"timeinput\">{tools}</h6>\n                </div>\n    \n                <div className=\"projectside-post-nav\">\n                    <h2>All Case Studies</h2>\n                    {data.allMarkdownRemark.edges.map((project, index) => (\n                        <h4 key={index}>\n                            <Link to={project.node.frontmatter.permalink}>{project.node.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\n                        </h4>\n                    ))}\n                </div>\n    \n                <div className=\"projectside-post-context\">\n                    <h2>Previous</h2>\n                    <div><Link to={previousPost.frontmatter.permalink}>{previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link></div>    \n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"projectside-post\">\n                <h2>Details</h2>\n                <div className=\"projectside-post-info\">\n                    <h5 className=\"time\">Timeframe:</h5> <h6 className=\"timeinput\">{timeframe}</h6>\n                    <h5 className=\"tools\">Tools:</h5> <h6 className=\"timeinput\">{tools}</h6>\n                </div>\n    \n                <div className=\"projectside-post-nav\">\n                    <h2>All Case Studies</h2>\n                    {data.allMarkdownRemark.edges.map((project, index) => (\n                        <h4 key={index}>\n                            <Link to={project.node.frontmatter.permalink}>{project.node.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\n                        </h4>\n                    ))}\n                </div>\n    \n                <div className=\"projectside-post-context\">\n                    <h2>Previous</h2>\n                    <div><Link to={previousPost.frontmatter.permalink}>{previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link></div>   \n                    <h2>Next</h2>\n                    <div><Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link></div>   \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProjectSide","import React from 'react'\n// import Img from 'gatsby-image'\n\nimport style from '../styles/projectpost.module.scss'\n\nconst Post = ({\n    title,\n    date,\n    path,\n    excerpt,\n    html,\n}) => {\n\n    return (\n        <article className={style.project}>\n            <div className={style.projectheading}>\n                <div className={style.projecttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\n            </div>\n\n            <div className={style.projectcontent}>\n                <div dangerouslySetInnerHTML={{ __html: html }} />\n            </div>\n        </article>\n    )\n\n}\n\nexport default Post\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout/layout'\nimport ProjectSide from \"../components/projectside\"\nimport Post from \"../components/projectpostmodule\"\n\nimport \"../styles/projectgrid.scss\"\n\nconst ProjectPostTemplate = ({ data, pageContext }) => {\n    const {\n        frontmatter: { title, updated, permalink, timeframe, tools, coverimage },\n        excerpt: autoExcerpt,\n        id,\n        html,\n    } = data.markdownRemark\n    const { next, previous } = pageContext\n\n    return (\n        <Layout>\n          <SEO title={title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")} description={autoExcerpt} />\n\n            <div className=\"projectgrid\">\n                <div className=\"projectgrid-content\">\n                    <Post\n                        key={id}\n                        title={title}\n                        date={updated}\n                        path={permalink}\n                        coverimage={coverimage.absolutePath}\n                        html={html}\n                    />\n                </div>\n                <div className=\"projectgrid-nav\">\n                    <ProjectSide timeframe={timeframe} tools={tools} previousPost={previous} nextPost={next}/>\n                </div>\n            </div>\n        </Layout>\n    )\n}\n\nexport default ProjectPostTemplate\n\nexport const postQuery = graphql `\n    query ProjectPostQuery ($path: String) {\n        markdownRemark(frontmatter: { permalink: { eq: $path } }) {\n            frontmatter {\n                title\n                updated(formatString: \"MMMM DD[,] YYYY\")\n                permalink\n                timeframe\n                tools\n                coverimage {\n                    absolutePath\n                }\n            }\n            id\n            html\n            excerpt\n        }\n    }\n`\n"],"sourceRoot":""}