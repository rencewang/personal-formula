{"version":3,"sources":["webpack:///./src/components/blogside.js","webpack:///./src/styles/blogpost.module.scss","webpack:///./src/components/blogpostmodule.js","webpack:///./src/templates/blogPost.js"],"names":["BlogSide","data","useStaticQuery","className","allMarkdownRemark","category","slice","reverse","map","index","key","fieldValue","edges","post","node","id","to","frontmatter","permalink","title","replace","module","exports","Post","date","path","excerpt","tag","html","previousPost","nextPost","style","postarea","postheading","posttitle","postdate","postcat","postcontent","dangerouslySetInnerHTML","__html","postnavigation","postQuery","BlogPostTemplate","pageContext","markdownRemark","updated","autoExcerpt","next","previous","description"],"mappings":"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","file":"component---src-templates-blog-post-js-d8a2346fefa9ae918d69.js","sourcesContent":["import React from \"react\"\r\nimport { useStaticQuery, graphql, Link } from \"gatsby\"\r\n\r\nimport \"../styles/projectblogside.scss\"\r\n\r\nconst BlogSide = () => {\r\n\r\n    const data = useStaticQuery(graphql`\r\n    query BlogNavigationQuery {\r\n        allMarkdownRemark (\r\n            filter: { frontmatter: { type: {eq: \"post\"}, published: {eq: true} } }\r\n            sort: { fields: [frontmatter___updated] order: DESC }\r\n        ) {\r\n            category:group(field: frontmatter___category) {\r\n                fieldValue\r\n                edges {\r\n                    node {\r\n                        frontmatter {\r\n                            title\r\n                            permalink\r\n                        }\r\n                        id\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }`)\r\n\r\n    return (\r\n        <div className=\"blogcategorylist\">\r\n\r\n            {data.allMarkdownRemark.category.slice(0).reverse().map((category, index) => (\r\n\r\n                <div className=\"category\" key={index}>\r\n                    <h2>{category.fieldValue}</h2>\r\n\r\n                    {category.edges.map(post => (\r\n                        <h4 key={post.node.id}>\r\n                            <Link to={post.node.frontmatter.permalink}>{post.node.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\r\n                        </h4>\r\n                    ))}\r\n\r\n                </div>\r\n                \r\n            ))}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlogSide","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footnoteRef\":\"blogpost-module--footnote-ref--cExGl\",\"footnotes\":\"blogpost-module--footnotes--3etn-\",\"overall\":\"blogpost-module--overall--1fXzx\",\"container\":\"blogpost-module--container--1_nY6\",\"content\":\"blogpost-module--content--3uxN6\",\"post\":\"blogpost-module--post--3aGtG\",\"postarea\":\"blogpost-module--postarea--264qp\",\"postheading\":\"blogpost-module--postheading--142lb\",\"posttitle\":\"blogpost-module--posttitle--6wU6n\",\"postcontent\":\"blogpost-module--postcontent--2mtP_\",\"postnavigation\":\"blogpost-module--postnavigation--2de4g\"};","import React from 'react'\r\nimport { Link } from 'gatsby'\r\n// import Img from 'gatsby-image'\r\n\r\nimport style from '../styles/blogpost.module.scss'\r\n\r\nconst Post = ({\r\n    title,\r\n    date,\r\n    path,\r\n    excerpt,\r\n    tag,\r\n    category,\r\n    html,\r\n    previousPost,\r\n    nextPost,\r\n}) => {\r\n\r\n    if (previousPost==null) {\r\n        return (\r\n            <article className={style.post}>\r\n                <div className={style.postarea}>\r\n                    <div className={style.postheading}>\r\n                        <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\r\n                        <span className={style.postdate}>{date}</span>\r\n                        <span> in </span>\r\n                        <span className={style.postcat}>{category}</span>\r\n                    </div>\r\n\r\n                    <div className={style.postcontent}>\r\n                        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={style.postnavigation}>\r\n                    <div></div>\r\n                    <Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}  &raquo;</Link>\r\n                </div>\r\n            </article>\r\n        )\r\n    } else if (nextPost==null) {\r\n        return (\r\n            <article className={style.post}>\r\n                <div className={style.postarea}>\r\n                    <div className={style.postheading}>\r\n                        <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\r\n                        <span className={style.postdate}>{date}</span>\r\n                        <span> in </span>\r\n                        <span className={style.postcat}>{category}</span>\r\n                    </div>\r\n                    <div className={style.postcontent}>\r\n                        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className={style.postnavigation}>\r\n                    <Link to={previousPost.frontmatter.permalink}>&laquo; {previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\r\n                    <div></div>\r\n                </div>\r\n            </article>\r\n        )\r\n    } else {\r\n        return (\r\n            <article className={style.post}>\r\n                <div className={style.postarea}>\r\n                    <div className={style.postheading}>\r\n                        <div className={style.posttitle}>{title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</div>\r\n                        <span className={style.postdate}>{date}</span>\r\n                        <span> in </span>\r\n                        <span className={style.postcat}>{category}</span>\r\n                    </div>\r\n                    <div className={style.postcontent}>\r\n                        <div dangerouslySetInnerHTML={{ __html: html }} />\r\n                    </div>\r\n                </div>\r\n            \r\n                <div className={style.postnavigation}>\r\n                    <Link to={previousPost.frontmatter.permalink}>&laquo; {previousPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}</Link>\r\n                    <Link to={nextPost.frontmatter.permalink}>{nextPost.frontmatter.title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")}  &raquo;</Link>\r\n                </div>\r\n            </article>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Post\r\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\n\r\nimport SEO from '../components/seo'\r\nimport Layout from '../components/layout/layout'\r\nimport BlogSide from \"../components/blogside\"\r\nimport Post from \"../components/blogpostmodule\"\r\n\r\nimport \"../styles/bloggrid.scss\"\r\n\r\nconst BlogPostTemplate = ({ data, pageContext }) => {\r\n    const {\r\n        frontmatter: { title, updated, permalink, tag, category },\r\n        excerpt: autoExcerpt,\r\n        id,\r\n        html,\r\n    } = data.markdownRemark\r\n    const { next, previous } = pageContext\r\n\r\n    return (\r\n        <Layout>\r\n          <SEO title={title.replace(\"&#58;\", \":\").replace(\"&amp;\", \"&\")} description={autoExcerpt} />\r\n\r\n            <div className=\"bloggrid\">\r\n                <div className=\"bloggrid-content-post\">\r\n                <Post\r\n                    key={id}\r\n                    title={title}\r\n                    date={updated}\r\n                    path={permalink}\r\n                    // coverImage={coverImage}\r\n                    html={html}\r\n                    tag={tag}\r\n                    category={category}\r\n                    previousPost={previous}\r\n                    nextPost={next}\r\n                />\r\n                </div>\r\n                <div className=\"bloggrid-nav-post\">\r\n                    <BlogSide />\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default BlogPostTemplate\r\n\r\nexport const postQuery = graphql `\r\n    query BlogPostQuery ($path: String) {\r\n        markdownRemark(frontmatter: { permalink: { eq: $path } }) {\r\n            frontmatter {\r\n                title\r\n                updated(formatString: \"MMMM DD[,] YYYY\")\r\n                tag\r\n                category\r\n                permalink\r\n            }\r\n            id\r\n            html\r\n            excerpt\r\n        }\r\n    }\r\n`\r\n"],"sourceRoot":""}